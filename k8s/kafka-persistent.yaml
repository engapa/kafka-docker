apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
    component: kafka
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 9092
    name: server
  - port: 2181
    name: zkclient
  - port: 2888
    name: zkserver
  - port: 3888
    name: zkleader
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
    component: kafka
#  annotations:
## Use this annotation if you want allocate each pod on different node
## Note the number of nodes must be upper than REPLICAS parameter.
#        scheduler.alpha.kubernetes.io/affinity: >
#          {
#            "podAntiAffinity": {
#              "requiredDuringSchedulingIgnoredDuringExecution": [{
#                "labelSelector": {
#                  "matchExpressions": [{
#                    "key": "app",
#                    "operator": "In",
#                    "values": ["kafka"]
#                  }]
#                },
#                "topologyKey": "kubernetes.io/hostname"
#              }]
#            }
#          }
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka
        component: kafka
    spec:
      containers:
      - name: kafka
        imagePullPolicy: Always
        image: engapa/kafka:2.12-2.2.0
        ports:
        - containerPort: 9092
          name: broker-port
        - containerPort: 2181
          name: zkclient
        - containerPort: 2888
          name: zkserver
        - containerPort: 3888
          name: zkleader
        env:
        - name:  KAFKA_VERSION
          value: "2.2.0"
        - name:  SCALA_VERSION
          value: "2.12"
        - name : KAFKA_REPLICAS
          value: "3"
        - name:  KAFKA_ZK_LOCAL
          value: "false"
        - name:  KAFKA_HEAP_OPTS
          value: "-Xmx1448M -Xms1448M"
        - name:  SERVER_num_partitions
          value: "1"
        - name:  SERVER_delete_topic_enable
          value: "true"
        - name:  SERVER_log_retention_hours
          value: "2147483647"
        - name:  SERVER_zookeeper_connect
          value: "zk.default.svc.cluster.local:2181"
        - name:  SERVER_log_dirs
          value: "/opt/kafka/data/logs"
        - name:  SERVER_zookeeper_connection_timeout_ms
          value: "30000"
        livenessProbe:
          exec:
            command:
            - kafka_server_status.sh
          initialDelaySeconds: 30
          timeoutSeconds: 15
        volumeMounts:
        - name: data
          mountPath: /opt/kafka/data
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: kafka
        component: kafka
      annotations:
        volume.beta.kubernetes.io/storage-class: standard
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 80Mi